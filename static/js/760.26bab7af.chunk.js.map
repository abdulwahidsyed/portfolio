{"version":3,"file":"static/js/760.26bab7af.chunk.js","mappings":"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","sources":["components/NavigatorButtons/NavigatorButtons.js","pages/Home/BasicFieldsCtn/BasicFieldsCtn.js","pages/Home/SkillsCtn/SkillsCtn.js","pages/Home/EducationSection/EducationSection.js","pages/Home/WorkExperienceCtn/WorkExperienceCtn.js","pages/Home/ProjectsCtn/ProjectsCtn.js","pages/Home/FooterHome.js","pages/Home/Home.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { Button } from \"../UI/Button/Button\";\nimport { mobile } from \"../UI/Styled/media-queries\";\n\nexport const NavigatorButtons = ({\n  navigateHandler,\n  isInitialPage,\n  isLastPage,\n}) => {\n  return (\n    <StyledCtn>\n      {!isInitialPage ? (\n        <Button onClick={() => navigateHandler(\"back\")}>Back</Button>\n      ) : null}\n      {!isLastPage ? (\n        <Button onClick={() => navigateHandler(\"next\")}>Next</Button>\n      ) : null}\n    </StyledCtn>\n  );\n};\n\nconst StyledCtn = styled.div`\n  position: fixed;\n  right: 20px;\n  left: unset;\n  bottom: 60px;\n  display: flex;\n  gap: 20px;\n\n  ${mobile`\n    right: 0;\n    left: 0;\n    justify-content: center;\n  `}\n`;\n","import styled from \"styled-components\";\n\nimport {\n  StyledFlexSection,\n  StyledHeadingMedium,\n  StyledInpBox,\n  StyledInputLabel,\n  StyledInputSection,\n} from \"../../../components/UI/Styled\";\nimport { memo } from \"react\";\nimport Input from \"../../../components/UI/Input/Input\";\n\nconst BasicFieldsCtn = ({ inputsBasic, onChange, basicRef }) => {\n  return (\n    <StyledCtn ref={basicRef}>\n      <StyledHeadingMedium className=\"mb-20\">Basic fields</StyledHeadingMedium>\n      <StyledFlexSectionLoc style={{ margin: \"0 0 10px 0 \" }}>\n        {inputsBasic.map((input, i) => (\n          <StyledInpBoxLoc\n            key={input.name}\n            isLastChild={i == inputsBasic.length - 1}\n          >\n            <StyledInputLabel>{input.label}</StyledInputLabel>\n            <Input {...input} onChange={onChange} />\n          </StyledInpBoxLoc>\n        ))}\n      </StyledFlexSectionLoc>\n    </StyledCtn>\n  );\n};\n\nexport default memo(BasicFieldsCtn);\n\nconst StyledCtn = styled(StyledInputSection)`\n  flex-direction: column;\n  gap: 0;\n`;\n\nconst StyledFlexSectionLoc = styled(StyledFlexSection)`\n  margin: 0 0 10px 0;\n  flex-wrap: wrap;\n  row-gap: 0;\n`;\n\nconst StyledInpBoxLoc = styled(StyledInpBox)`\n  flex-basis: ${(props) => (props.isLastChild ? \"100%\" : \"calc(50% - 20px)\")};\n`;\n","import styled from \"styled-components\";\nimport {\n  StyledHeadingMedium,\n  StyledInpBox,\n  StyledInputLabel,\n  StyledInputSection,\n  StyledMatrixChild,\n  StyledMatrixCtn,\n} from \"../../../components/UI/Styled\";\nimport { Button } from \"../../../components/UI/Button/Button\";\nimport Input from \"../../../components/UI/Input/Input\";\nimport { memo } from \"react\";\n\nexport const SkillsCtn = ({\n  skillsRef,\n  addNewSkillInput,\n  inputsMatrix,\n  onChange,\n  removeSkillInput,\n}) => {\n  return (\n    <Container ref={skillsRef}>\n      <StyledFlex>\n        <StyledHeadingMedium className=\"mb-20\">Skills</StyledHeadingMedium>\n        <Button onClick={addNewSkillInput}>Add New Skill</Button>\n      </StyledFlex>\n\n      <StyledMatrixCtn>\n        {inputsMatrix.map((inputs, i) => (\n          <StyledMatrixChild key={inputs[0].key} newlyAdded={i > 0}>\n            {inputs.map((inp) => (\n              <StyledInpBox key={inp.name}>\n                <StyledInputLabel>{inp.label}</StyledInputLabel>\n                <Input {...inp} onChange={(e) => onChange(e, i)} />\n              </StyledInpBox>\n            ))}\n            {i > 0 ? (\n              <StyledRemoveBtn\n                onClick={() => removeSkillInput(i)}\n                variant=\"red\"\n              >\n                Remove\n              </StyledRemoveBtn>\n            ) : null}\n          </StyledMatrixChild>\n        ))}\n      </StyledMatrixCtn>\n    </Container>\n  );\n};\n\nexport default memo(SkillsCtn);\n\nconst Container = styled(StyledInputSection)`\n  display: block;\n`;\n\nconst StyledRemoveBtn = styled(Button)`\n  display: block;\n  margin-left: auto;\n`;\n\nconst StyledFlex = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 20px;\n\n  > * {\n    margin: 0 !important;\n  }\n`;\n","import styled from \"styled-components\";\nimport { Button } from \"../../../components/UI/Button/Button\";\nimport {\n  StyledHeadingMedium,\n  StyledInpBox,\n  StyledInputLabel,\n  StyledInputSection,\n  StyledMatrixChild,\n  StyledMatrixCtn,\n} from \"../../../components/UI/Styled\";\nimport Input from \"../../../components/UI/Input/Input\";\nimport { memo } from \"react\";\n\nconst EducationSection = ({\n  educationRef,\n  addNewEducationSection,\n  inputsMatrix,\n  onChange,\n  removeEducation,\n}) => {\n  return (\n    <Container ref={educationRef}>\n      <StyledFlex>\n        <StyledHeadingMedium className=\"mb-20\">Education</StyledHeadingMedium>\n        <Button onClick={addNewEducationSection}>Add New Education</Button>\n      </StyledFlex>\n\n      <StyledMatrixCtn>\n        {inputsMatrix.map((inputs, i) => (\n          <StyledMatrixChild key={inputs[0].key} newlyAdded={i > 0}>\n            {inputs.map((inp) => (\n              <StyledInpBox key={inp.name}>\n                <StyledInputLabel>{inp.label}</StyledInputLabel>\n                <Input {...inp} onChange={(e) => onChange(e, i)} />\n              </StyledInpBox>\n            ))}\n            {i > 0 ? (\n              <StyledRemoveBtn onClick={() => removeEducation(i)} variant=\"red\">\n                Remove\n              </StyledRemoveBtn>\n            ) : null}\n          </StyledMatrixChild>\n        ))}\n      </StyledMatrixCtn>\n    </Container>\n  );\n};\n\nexport default memo(EducationSection);\n\nconst Container = styled(StyledInputSection)`\n  display: block;\n`;\n\nconst StyledRemoveBtn = styled(Button)`\n  display: block;\n  margin-left: auto;\n`;\n\nconst StyledFlex = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 20px;\n\n  > * {\n    margin: 0 !important;\n  }\n`;\n","import styled from \"styled-components\";\nimport { Button } from \"../../../components/UI/Button/Button\";\nimport Input from \"../../../components/UI/Input/Input\";\nimport {\n  StyledHeadingMedium,\n  StyledInpBox,\n  StyledInputLabel,\n  StyledInputSection,\n  StyledMatrixChild,\n  StyledMatrixCtn,\n} from \"../../../components/UI/Styled\";\nimport { memo } from \"react\";\n\nconst WorkExperienceCtn = ({\n  workExpRef,\n  addWorkExperience,\n  removeWorkExperience,\n  onChange,\n  inputsMatrix,\n}) => {\n  return (\n    <Container ref={workExpRef}>\n      <StyledFlex>\n        <StyledHeadingMedium className=\"mb-20\">\n          Work Experience{\" \"}\n        </StyledHeadingMedium>\n        <Button onClick={addWorkExperience}>Add New Work Experience</Button>\n      </StyledFlex>\n\n      <StyledMatrixCtn>\n        {inputsMatrix.map((inputs, i) => (\n          <StyledMatrixChild newlyAdded={i > 0}>\n            {inputs.map((inp) => (\n              <StyledInpBox key={inp.name}>\n                <StyledInputLabel>{inp.label}</StyledInputLabel>\n                <Input\n                  {...inp}\n                  onChange={(e, ...rest) => onChange(e, i, ...rest)}\n                />\n              </StyledInpBox>\n            ))}\n            {i > 0 ? (\n              <StyledRemoveBtn\n                onClick={() => removeWorkExperience(i)}\n                variant=\"red\"\n              >\n                Remove\n              </StyledRemoveBtn>\n            ) : null}\n          </StyledMatrixChild>\n        ))}\n      </StyledMatrixCtn>\n    </Container>\n  );\n};\n\nexport default memo(WorkExperienceCtn);\n\nconst Container = styled(StyledInputSection)`\n  display: block;\n`;\n\nconst StyledRemoveBtn = styled(Button)`\n  display: block;\n  margin-left: auto;\n`;\n\nconst StyledFlex = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 20px;\n\n  > * {\n    margin: 0 !important;\n  }\n`;\n","import styled from \"styled-components\";\nimport { Button } from \"../../../components/UI/Button/Button\";\nimport Input from \"../../../components/UI/Input/Input\";\nimport {\n  StyledHeadingMedium,\n  StyledInpBox,\n  StyledInputLabel,\n  StyledInputSection,\n  StyledMatrixChild,\n  StyledMatrixCtn,\n} from \"../../../components/UI/Styled\";\nimport { memo } from \"react\";\n\nconst ProjectsCtn = ({\n  projectRef,\n  inputsMatrix,\n  addNewProject,\n  removeProject,\n  onChange,\n}) => {\n  return (\n    <Container ref={projectRef}>\n      <StyledFlex>\n        <StyledHeadingMedium className=\"mb-20\">Projects</StyledHeadingMedium>\n        <Button onClick={addNewProject}>Add New Project</Button>\n      </StyledFlex>\n\n      <StyledMatrixCtn>\n        {inputsMatrix.map((inputs, i) => (\n          <StyledMatrixChild key={inputs[0].key} newlyAdded={i > 0}>\n            {inputs.map((inp) => (\n              <StyledInpBox key={inp.name}>\n                <StyledInputLabel>{inp.label}</StyledInputLabel>\n                <Input {...inp} onChange={(e) => onChange(e, i)} />\n              </StyledInpBox>\n            ))}\n            {i > 0 ? (\n              <StyledRemoveBtn onClick={() => removeProject(i)} variant=\"red\">\n                Remove\n              </StyledRemoveBtn>\n            ) : null}\n          </StyledMatrixChild>\n        ))}\n      </StyledMatrixCtn>\n    </Container>\n  );\n};\n\nexport default memo(ProjectsCtn);\n\nconst Container = styled(StyledInputSection)`\n  display: block;\n  // max-height: 400px;\n  // overflow: auto;\n`;\n\nconst StyledRemoveBtn = styled(Button)`\n  display: block;\n  margin-left: auto;\n`;\n\nconst StyledFlex = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 20px;\n\n  > * {\n    margin: 0 !important;\n  }\n`;\n","import styled from \"styled-components\";\nimport { StyledParagraph, StyledFooter } from \"../../components/UI/Styled\";\nimport { mobile } from \"../../components/UI/Styled/media-queries\";\nimport { StyledButton } from \"../../components/UI/Styled/Button.styled\";\n\nexport const FooterHome = ({ onClick, selected }) => {\n  const items = {\n    0: \"Basic fields\",\n    1: \"Skills\",\n    2: \"Projects\",\n    3: \"Work Experience\",\n    4: \"Education\",\n  };\n\n  return (\n    <Ctn>\n      <StyledFlexed>\n        {Object.keys(items).map((el, i) => (\n          <StyledParagraphLoc\n            onClick={() => onClick(el)}\n            selected={el == selected}\n          >\n            {items[el]}\n          </StyledParagraphLoc>\n        ))}\n      </StyledFlexed>\n    </Ctn>\n  );\n};\n\nconst Ctn = styled(StyledFooter)`\n  overflow: auto;\n  box-sizing: border-box;\n`;\n\nconst StyledFlexed = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-sizing: border-box;\n  margin: auto;\n  gap: 20px;\n`;\n\nconst StyledParagraphLoc = styled(StyledParagraph)`\n  color: ${(props) => (props.selected ? \"rgb(129 200 255);\" : \"white\")};\n  cursor: pointer;\n  transition: transform 0.3s cubic-bezier(0.4, 0, 0.1, 1.1);\n  white-space: nowrap;\n  padding: 2px 20px;\n  margin: 0;\n\n  transform: ${(props) => (props.selected ? \"scale(1.4)\" : \"unset\")};\n\n  ${mobile`\n    font-size: 14px;\n  `}\n\n  &:hover {\n    background: ${(props) =>\n      props.selected ? \"unset\" : \"rgb(225 225 225 / 19%)\"};\n  }\n`;\n","import { useDispatch, useSelector } from \"react-redux\";\n\nimport { StyledHeadingBig, StyledLayout } from \"../../components/UI/Styled\";\nimport {\n  addNewEducation,\n  addNewProject,\n  addNewSkill,\n  addWorkExperience,\n  removeEducation,\n  removeProject,\n  removeSkill,\n  removeWorkExperience,\n  updateEducationInputs,\n  updateBasicInputs,\n  updateNewProject,\n  updateSkills,\n  updateWorkExperience,\n  updateVisibleComponent,\n  generateSummary,\n} from \"../../redux/homeSlice/home.slice\";\nimport BasicFieldsCtn from \"./BasicFieldsCtn/BasicFieldsCtn\";\nimport SkillsCtn from \"./SkillsCtn/SkillsCtn\";\nimport EducationSection from \"./EducationSection/EducationSection\";\nimport WorkExperienceCtn from \"./WorkExperienceCtn/WorkExperienceCtn\";\nimport ProjectsCtn from \"./ProjectsCtn/ProjectsCtn\";\nimport { useCallback, useRef } from \"react\";\nimport { FooterHome } from \"./FooterHome\";\nimport { NavigatorButtons } from \"../../components/NavigatorButtons/NavigatorButtons\";\nimport { useNavigate } from \"react-router-dom\";\nimport { generateSummaryHelper } from \"./home.helper\";\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const basicRef = useRef();\n  const skillsRef = useRef();\n  const projectRef = useRef();\n  const workExpRef = useRef();\n  const educationRef = useRef();\n\n  const refs = [basicRef, skillsRef, projectRef, workExpRef, educationRef];\n\n  const {\n    inputsBasic,\n    inputsEducation,\n    inputsWorkExperience,\n    inputsSkills,\n    inputsProjects,\n    visibleComponent,\n    summary,\n  } = useSelector((st) => st.home);\n\n  const onChange = (e) => {\n    const { name, value } = e.target;\n\n    const dat = inputsBasic.map((el) => ({\n      ...el,\n      value: el.name === name ? value : el.value,\n      isError: el.name === name ? false : el.isError,\n    }));\n\n    dispatch(updateBasicInputs(dat));\n  };\n\n  const addNewSkillInput = () => {\n    dispatch(addNewSkill());\n  };\n\n  const removeSkillInput = (i) => {\n    dispatch(removeSkill(i));\n  };\n\n  const onChangeSkills = (e, i) => {\n    const { value, name } = e.target;\n    const matrix = [...inputsSkills];\n\n    const updatedInps = matrix[i].map((el) => {\n      if (name === el.name) {\n        return { ...el, value };\n      }\n      return el;\n    });\n    matrix[i] = updatedInps;\n    dispatch(updateSkills(matrix));\n  };\n\n  const addNewEducationSection = () => {\n    dispatch(addNewEducation());\n  };\n\n  const onChangeEducation = (e, i) => {\n    const { value, name } = e.target;\n\n    const dat = [...inputsEducation];\n    const arr = dat[i].map((el) => {\n      if (el.name === name) {\n        return { ...el, value };\n      }\n      return el;\n    });\n\n    dat[i] = arr;\n    dispatch(updateEducationInputs(dat));\n  };\n\n  const removeEducationLoc = (i) => {\n    dispatch(removeEducation(i));\n  };\n\n  const addWorkExperienceLoc = () => {\n    dispatch(addWorkExperience());\n  };\n\n  const removeWorkExperienceLoc = (i) => {\n    dispatch(removeWorkExperience(i));\n  };\n\n  const onChangeWorkExperience = (e, i, type, b) => {\n    const { value, name } = e.target;\n\n    const dat = [...inputsWorkExperience];\n    const arr = dat[i].map((el) => {\n      if (el.name === name) {\n        return { ...el, value };\n      }\n      return el;\n    });\n\n    dat[i] = arr;\n    dispatch(updateWorkExperience(dat));\n  };\n\n  const addNewProjectLoc = () => {\n    dispatch(addNewProject());\n  };\n\n  const removeProjectLoc = (i) => {\n    dispatch(removeProject(i));\n  };\n\n  const onChangeProjectLoc = (e, i) => {\n    const { value, name } = e.target;\n\n    const dat = [...inputsProjects];\n    const updated = dat[i].map((el) => ({\n      ...el,\n      value: el.name === name ? value : el.value,\n    }));\n    dat[i] = updated;\n\n    dispatch(updateNewProject(dat));\n  };\n\n  const navigateToSection = (i) => {\n    const myRef = refs[i];\n    if (myRef.current) {\n      const offsetTop =\n        myRef.current.getBoundingClientRect().top + window.pageYOffset - 100;\n      dispatch(updateVisibleComponent(i));\n      window.scrollTo({\n        top: offsetTop,\n        behavior: \"smooth\",\n      });\n    }\n  };\n\n  const validateInputs = () => {\n    let error = false;\n    const inps = inputsBasic.map((el) => {\n      const k = el.isRequired && !el.value;\n      if (!error && k) error = true;\n      return { ...el, isError: k };\n    });\n    dispatch(updateBasicInputs(inps));\n\n    return error;\n  };\n\n  const navigateHandler = (type) => {\n    const isError = validateInputs();\n    if (isError) {\n      window.scrollTo({\n        top: 0,\n        behavior: \"smooth\",\n      });\n      return;\n    }\n\n    const dat = {\n      inputsBasic,\n      inputsEducation,\n      inputsWorkExperience,\n      inputsSkills,\n      inputsProjects,\n    };\n\n    // if (!summary) {\n    //   const payload = generateSummaryHelper(dat);\n    //   dispatch(generateSummary(payload));\n    // }\n    navigate(\"/generator\");\n  };\n\n  const callbackRef = useCallback(() => {\n    const observer = new IntersectionObserver(\n      (entries, observer) => {\n        entries.forEach((entry, i) => {\n          const isIntersecting = entry.isIntersecting;\n          if (isIntersecting) {\n            const index = parseInt(entry.target.getAttribute(\"data-index\"), 10);\n            dispatch(updateVisibleComponent(index));\n          }\n        });\n      },\n      {\n        root: null,\n        threshold: 0.8,\n        rootMargin: \"100px\",\n      }\n    );\n\n    refs.forEach((ref, i) => {\n      if (ref.current) {\n        ref.current.setAttribute(\"data-index\", i.toString());\n        observer.observe(ref.current);\n      }\n    });\n  }, []);\n\n  return (\n    <StyledLayout ref={callbackRef}>\n      <StyledHeadingBig>Add details</StyledHeadingBig>\n      <BasicFieldsCtn\n        basicRef={basicRef}\n        inputsBasic={inputsBasic}\n        onChange={onChange}\n      />\n      <SkillsCtn\n        skillsRef={skillsRef}\n        addNewSkillInput={addNewSkillInput}\n        inputsMatrix={inputsSkills}\n        onChange={onChangeSkills}\n        removeSkillInput={removeSkillInput}\n      />\n      <ProjectsCtn\n        projectRef={projectRef}\n        inputsMatrix={inputsProjects}\n        addNewProject={addNewProjectLoc}\n        removeProject={removeProjectLoc}\n        onChange={onChangeProjectLoc}\n      />\n      <WorkExperienceCtn\n        workExpRef={workExpRef}\n        inputsMatrix={inputsWorkExperience}\n        addWorkExperience={addWorkExperienceLoc}\n        removeWorkExperience={removeWorkExperienceLoc}\n        onChange={onChangeWorkExperience}\n      />\n      <EducationSection\n        educationRef={educationRef}\n        addNewEducationSection={addNewEducationSection}\n        inputsMatrix={inputsEducation}\n        onChange={onChangeEducation}\n        removeEducation={removeEducationLoc}\n      />\n      <NavigatorButtons navigateHandler={navigateHandler} isInitialPage />\n      <FooterHome selected={visibleComponent} onClick={navigateToSection} />\n    </StyledLayout>\n  );\n};\n\nexport default Home;\n"],"names":["NavigatorButtons","_ref","navigateHandler","isInitialPage","isLastPage","_jsxs","StyledCtn","children","_jsx","Button","onClick","styled","div","_templateObject","_taggedTemplateLiteral","mobile","_templateObject2","BasicFieldsCtn","inputsBasic","onChange","basicRef","ref","StyledHeadingMedium","className","StyledFlexSectionLoc","style","margin","map","input","i","StyledInpBoxLoc","isLastChild","length","StyledInputLabel","label","Input","name","memo","StyledInputSection","StyledFlexSection","StyledInpBox","_templateObject3","props","SkillsCtn","skillsRef","addNewSkillInput","inputsMatrix","removeSkillInput","Container","StyledFlex","StyledMatrixCtn","inputs","StyledMatrixChild","newlyAdded","inp","e","StyledRemoveBtn","variant","key","EducationSection","educationRef","addNewEducationSection","removeEducation","WorkExperienceCtn","workExpRef","addWorkExperience","removeWorkExperience","_len","arguments","rest","Array","_key","ProjectsCtn","projectRef","addNewProject","removeProject","FooterHome","selected","items","Ctn","StyledFlexed","Object","keys","el","StyledParagraphLoc","StyledFooter","StyledParagraph","_templateObject4","Home","dispatch","useDispatch","navigate","useNavigate","useRef","refs","inputsEducation","inputsWorkExperience","inputsSkills","inputsProjects","visibleComponent","summary","useSelector","st","home","callbackRef","useCallback","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","index","parseInt","target","getAttribute","updateVisibleComponent","root","threshold","rootMargin","current","setAttribute","toString","observe","StyledLayout","StyledHeadingBig","value","dat","isError","updateBasicInputs","addNewSkill","onChangeSkills","matrix","updatedInps","updateSkills","removeSkill","addNewProjectLoc","onChangeProjectLoc","updated","updateNewProject","addWorkExperienceLoc","onChangeWorkExperience","type","b","arr","updateWorkExperience","addNewEducation","onChangeEducation","updateEducationInputs","validateInputs","error","inps","k","isRequired","window","scrollTo","top","behavior","myRef","offsetTop","getBoundingClientRect","pageYOffset"],"sourceRoot":""}